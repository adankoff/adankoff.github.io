// Grid settings
// -------------------------

* {padding:0px;margin:0px;box-sizing:border-box;}
html,
body {
  width: 100%;
  height: 100%;
}
.right {
	float: right !important;
}
.fullRow {
	width:100%;
	float:left;
}
.row {
	width:100%;
	float:left;
	background: #fff;
}

// Framework grid generation
@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
  }
  #{$list} {
    position: relative;
    min-height: 1px;
    float:left;
  }
}
@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {$list: "#{$list}, .col-#{$class}-#{$i}";}
  #{$list} {float: left;}
}

@mixin calc-grid-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .col-#{$class}-#{$index} {
      width: percentage(($index / $grid-columns));
    }
  }
  // @if ($type == push) and ($index > 0) {
  //   .col-#{$class}-push-#{$index} {
  //     left: percentage(($index / $grid-columns));
  //   }
  // }
  // @if ($type == push) and ($index == 0) {
  //   .col-#{$class}-push-0 {
  //     left: auto;
  //   }
  // }
  // @if ($type == pull) and ($index > 0) {
  //   .col-#{$class}-pull-#{$index} {
  //     right: percentage(($index / $grid-columns));
  //   }
  // }
  // @if ($type == pull) and ($index == 0) {
  //   .col-#{$class}-pull-0 {
  //     right: auto;
  //   }
  // }
  // @if ($type == offset) {
  //   .col-#{$class}-offset-#{$index} {
  //     margin-left: percentage(($index / $grid-columns));
  //   }
  // }
}

// [converter] This is defined recursively in LESS, but Sass supports real loops
@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}


// Create grid for specific class
@mixin make-grid($class) {
  @include float-grid-columns($class);
  @include loop-grid-columns($grid-columns, $class, width);
  // @include loop-grid-columns($grid-columns, $class, pull);
  // @include loop-grid-columns($grid-columns, $class, push);
  // @include loop-grid-columns($grid-columns, $class, offset);
}


// Columns
@include make-grid-columns;

// Extra small grid
@include make-grid(xs);

// Small grid
@media (min-width: $screen-sm-min) {
  @include make-grid(sm);
}

// Medium grid
@media (min-width: $screen-md-min) {
  @include make-grid(md);
}

// Large grid
@media (min-width: $screen-lg-min) {
  @include make-grid(lg);
}


/* ------------------------------------------
Grid
-------------------------------------------*/

.fullRow, .row,
.col-12, .col-11, .col-10, .col-9, .col-8, .col-7, .col-6, .col-5, .col-4, .col-3, .col-2, .col-1 {
	position: relative;
	margin:0px auto;
	padding:0px;
	box-sizing: border-box;
}
.fullRow {
	float:left;
}



